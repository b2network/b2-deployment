apiVersion: apps/v1
kind: Deployment
metadata:
  name: statedb
spec:
  selector:
    matchLabels:
      app: statedb
  replicas: 1
  template:
    metadata:
      labels:
        app: statedb
    spec:
      containers:
      - name: statedb
        image: postgres:15-alpine
        volumeMounts:
        # - name: datadir
        #   mountPath: /mnt/source
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init_prover_db.sql
          readOnly: true
        env:
        - name: POSTGRES_USER
          value: state_user
        - name: POSTGRES_PASSWORD
          value: state_password
        - name: POSTGRES_DB
          value: state_db
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi

      restartPolicy: Always
      volumes:
      # - name: datadir
      #   persistentVolumeClaim:
      #     claimName: b2-state-db-pvc
      #     readOnly: false
      - name: init-sql
        configMap:
          name: init-sql
          optional: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pooldb
spec:
  selector:
    matchLabels:
      app: pooldb
  replicas: 1
  template:
    metadata:
      labels:
        app: pooldb
    spec:
      containers:
      - name: pooldb
        image: postgres:15-alpine
        env:
        - name: POSTGRES_USER
          value: pool_user
        - name: POSTGRES_PASSWORD
          value: pool_password
        - name: POSTGRES_DB
          value: pool_db
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventdb
spec:
  selector:
    matchLabels:
      app: eventdb
  replicas: 1
  template:
    metadata:
      labels:
        app: eventdb
    spec:
      containers:
      - name: eventdb
        image: postgres:15-alpine
        volumeMounts:
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init_event_db.sql
          readOnly: true
        env:
        - name: POSTGRES_USER
          value: event_user
        - name: POSTGRES_PASSWORD
          value: event_password
        - name: POSTGRES_DB
          value: event_db
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi

      restartPolicy: Always
      volumes:
      - name: init-sql
        configMap:
          name: init-sql
          optional: false


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: l1
spec:
  selector:
    matchLabels:
      app: l1
  replicas: 1
  template:
    metadata:
      labels:
        app: l1
    spec:
      containers:
      - name: l1
        image: ghcr.io/b2network/b2-node:20231222-145531-18655e6-with-datadir-6baf597
        command: ["ethermintd", "start"]
        envFrom:
        - configMapRef:
            name: l1-bitcoin-component-cm
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prover
spec:
  selector:
    matchLabels:
      app: prover
  replicas: 1
  template:
    metadata:
      labels:
        app: prover
    spec:
      containers:
      - name: prover
        image: ghcr.io/b2network/b2-zkevm-prover:20231127-164129-7accb0b
        volumeMounts:
        - name: config
          mountPath: /usr/src/app/config.json
          subPath: prover-config.json
          readOnly: true
        args:
        - -c
        - /usr/src/app/config.json
        resources:
          limits:
            cpu: 2
            memory: 2Gi
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: config
          optional: false

---
apiVersion: batch/v1
kind: Job
metadata:
  name: approve
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - name: approve
        image: ghcr.io/b2network/b2-zkevm-node:dev-v0.4.0-RC6-20231222-091319-ca7a25af
        volumeMounts:
        - name: config
          mountPath: /app/config.toml
          subPath: zkevm-node-config.toml
          readOnly: true
        - name: config
          mountPath: /app/genesis.json
          subPath: zkevm-genesis-config.json
          readOnly: true
        - name: config
          mountPath: /pk/keystore
          subPath: sequencer.keystore
          readOnly: true
        command:
        - "/bin/sh"
        - "-c"
        - "/app/b2-zkevm-node approve --network custom --custom-network-file /app/genesis.json --key-store-path /pk/keystore --pw testonly --am 115792089237316195423570985008687907853269984665640564039457584007913129639935 -y --cfg /app/config.toml"
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
      restartPolicy: OnFailure
      volumes:
      - name: config
        configMap:
          name: config
          optional: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sync
spec:
  selector:
    matchLabels:
      app: sync
  replicas: 1
  template:
    metadata:
      labels:
        app: sync
    spec:
      containers:
      - name: sync
        image: ghcr.io/b2network/b2-zkevm-node:dev-v0.4.0-RC6-20231222-091319-ca7a25af
        volumeMounts:
        - name: config
          mountPath: /app/config.toml
          subPath: zkevm-node-config.toml
          readOnly: true
        - name: config
          mountPath: /app/genesis.json
          subPath: zkevm-genesis-config.json
          readOnly: true
        command:
        - "/bin/sh"
        - "-c"
        - "/app/b2-zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components synchronizer"
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: config
          optional: false


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eth-tx-manager
spec:
  selector:
    matchLabels:
      app: eth-tx-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: eth-tx-manager
    spec:
      containers:
      - name: eth-tx-manager
        image: ghcr.io/b2network/b2-zkevm-node:dev-v0.4.0-RC6-20231222-091319-ca7a25af
        volumeMounts:
        - name: config
          mountPath: /app/config.toml
          subPath: zkevm-node-config.toml
          readOnly: true
        - name: config
          mountPath: /app/genesis.json
          subPath: zkevm-genesis-config.json
          readOnly: true
        - name: config
          mountPath: /pk/sequencer.keystore
          subPath: sequencer.keystore
          readOnly: true
        - name: config
          mountPath: /pk/aggregator.keystore
          subPath: aggregator.keystore
          readOnly: true
        command:
        - "/bin/sh"
        - "-c"
        - "/app/b2-zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components eth-tx-manager"
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: config
          optional: false
